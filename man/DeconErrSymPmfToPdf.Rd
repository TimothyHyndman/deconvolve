% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DeconErrSymPmfToPdf.R
\name{DeconErrSymPmfToPdf}
\alias{DeconErrSymPmfToPdf}
\title{Create Probability Density Function from Probability Mass Function}
\usage{
DeconErrSymPmfToPdf(X.pmf, W, phi.W, xx, PhiK, muK2, t)
}
\arguments{
\item{X.pmf}{A list with parts "support" and "probweights"}

\item{W}{A vector of the contaminated data}

\item{phi.W}{A list with parts "complex", "re", "im", "norm" and "t.values" 
containing phi.W, Re(phi.W), Im(phi.W), Norm(phi.W) and the t values on which
they were calculated respectively.}

\item{xx}{A vector of x values on which to compute the density.}
}
\value{
A vector containing the density \eqn{f_X(x)} evaluated at each x in 
\code{xx}
}
\description{
Takes the output of DeconErrSymPmf along with the contaminated data, W, and
uses a kernel estimator to find an estimate for the probability density 
function of X.
}
\details{
PUT DETAILS HERE
}
\section{Authors}{

Aurore Delaigle
}

\section{References}{

Delaigle, A. and Hall, P. (2016). Methodology for non-parametric 
deconvolution when the error distribution is unknown. \emph{Journal of the 
Royal Statistical Society: Series B (Statistical Methodology)}, 78, 1, 
231-252.
}

\examples{
# Generate Test Data
W <- GenerateTestData(n = 500)

# Deconvolve
out <- DeconErrSymPmf(W)

phi.W <- out$phi.W

# Convert to Probability Density
fX <- DeconErrSymPmfToPdf(out, W, phi.W)

# Plot results
PlotPmfAndPdf(out, fX)
}
